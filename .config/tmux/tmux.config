set-option -sg escape-time 0                         # No delay for escape key press
set-option -sg default-terminal "xterm-256color"     # Set default terminal

set-option -g prefix 'C-s'                           # Set prefix to be Ctrl-a
set-option -g mouse on                               # Fix scrolling on macbook
set-option -g base-index 1                           # Start windows index from 1
set-option -g status-fg colour34                     # Statusbar foreground color
set-option -g status-bg default                      # Statusbar background color
set-option -g renumber-windows on                    # Automatically renumber windows
set-option -g status-position top                    # Statusbar position
set-option -g pane-border-format '─'                 # Panes border format
set-option -g pane-border-status top                 # Pane border status position
set-option -g pane-border-style 'fg=colour235'       # Colour inactive pane's border dark grey
set-option -g pane-active-border-style 'fg=colour34' # Colour active pane's border DarkSeaGreen

set-option -g status-left-length 20                                                             # Length of characters for the left section in the statusbar
set-option -g status-left " #S ｜ "                                                             # Differentiate windows from session name using a pipe and spaces
set-option -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}],} %H:%M"  # Show the time in the top right corner

bind-key C-l send-keys 'C-l'                                # Restores clear screen
bind-key Enter resize-pane -Z                               # Bind pane zoom to enter key
bind-key t swap-window -t 1                                 # Swap current window with first
bind-key k confirm kill-window                              # Kill window with confirmation
bind-key + set-window-option synchronize-panes              # Synchronize input to all panes
bind-key r source-file $XDG_CONFIG_HOME/tmux/tmux.config    # Use <prefix> r ro resource tmux.conf
bind-key c new-window      -c "#{pane_current_path}"        # Creates a new window in the same path
bind-key l split-window -h -c "#{pane_current_path}"        # Create new horizontal split in same path
bind-key j split-window -v -c "#{pane_current_path}"        # Create new vertical split in same path
bind-key -T copy-mode-vi v send-keys -X begin-selection     # Add selection copy using v in copy mode
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle    # Add rectangular selection copy using r in copy mode

# Some tests used in the key bindings below
IS_MACOS="uname | grep -q Darwin"
IS_VIM="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Setup copy to system clipboard depending on OS
if-shell "$IS_MACOS" \
    'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"' \
    'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"'

# Smart pane switching with awareness of Vim splits.
# https://github.com/christoomey/vim-tmux-navigator
bind-key -n 'C-h' if-shell "$IS_VIM" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$IS_VIM" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$IS_VIM" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$IS_VIM" 'send-keys C-l' 'select-pane -R'
# Smart pane resizer with awareness of Vim splits.
bind-key -n M-k if-shell "$IS_VIM" 'send-keys Space "-h"' 'resize-pane -U 5'
bind-key -n M-j if-shell "$IS_VIM" 'send-keys Space "=h"' 'resize-pane -D 5'
bind-key -n M-h if-shell "$IS_VIM" 'send-keys Space "-v"' 'resize-pane -L 5'
bind-key -n M-l if-shell "$IS_VIM" 'send-keys Space "=v"' 'resize-pane -R 5'
